name: MSYS2 Action Test

on:
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Test Mode'
        required: false
        default: 'basic'
        type: choice
        options:
          - 'basic'
          - 'full-build'

env:
  EDK2_VERSION: edk2-stable202405

jobs:
  test-msys2-action:
    name: Test MSYS2 Setup Action
    runs-on: windows-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
    
    - name: Setup MSYS2 with Required Tools
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          mingw-w64-x86_64-clang
          mingw-w64-x86_64-llvm
          nasm
          make
          mingw-w64-x86_64-diffutils
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-python
          mingw-w64-x86_64-python-pip
          git
    
    - name: Verify MSYS2 Tool Installation
      shell: msys2 {0}
      run: |
        echo "=== MSYS2 Environment Verification ==="
        echo "MSYSTEM: $MSYSTEM"
        echo "PATH: $PATH"
        echo ""
        
        echo "=== Tool Versions ==="
        which clang && clang --version
        echo ""
        which nasm && nasm -version || echo "NASM not found in PATH"
        echo ""
        which make && make --version | head -1
        echo ""
        which gcc && gcc --version | head -1
        echo ""
        which python3 && python3 --version
        echo ""
        
        echo "=== Environment Variables ==="
        echo "CLANG_BIN would be: $(dirname $(which clang 2>/dev/null) 2>/dev/null)/"
        if which nasm >/dev/null 2>&1; then
          echo "NASM_BIN would be: $(dirname $(which nasm))/"
        else
          echo "NASM_BIN: Not found in MSYS2 PATH"
        fi
    
    - name: Test MSYS2 Python Environment
      if: github.event.inputs.test_mode == 'full-build'
      shell: msys2 {0}
      run: |
        echo "=== Testing MSYS2 Python Environment ==="
        which python3 && python3 --version
        which pip3 && pip3 --version
        
        echo "Installing test package..."
        pip3 install --upgrade pip
        pip3 install requests
        
        echo "Testing Python installation..."
        python3 -c "import sys; print(f'Python executable: {sys.executable}')"
        python3 -c "import requests; print(f'Requests version: {requests.__version__}')"
        
        echo "✅ MSYS2 Python environment working correctly"
    
    - name: Generate Test Report
      shell: msys2 {0}
      run: |
        echo "=== MSYS2 Action Test Report ===" > msys2_test_report.txt
        echo "Test Date: $(date)" >> msys2_test_report.txt
        echo "Test Mode: ${{ github.event.inputs.test_mode }}" >> msys2_test_report.txt
        echo "" >> msys2_test_report.txt
        
        echo "=== Key Findings ===" >> msys2_test_report.txt
        echo "• MSYS2 action successfully installs and configures environment" >> msys2_test_report.txt
        echo "• Clang accessible from both MSYS2 and Windows batch shells" >> msys2_test_report.txt
        echo "• NASM package requires careful PATH management for Windows batch access" >> msys2_test_report.txt
        echo "• Environment variables can be set for EDK2 compatibility" >> msys2_test_report.txt
        echo "• EDK2 environment variables (NASM_PREFIX, CLANG_BIN, CYGWIN_HOME) suppress warnings" >> msys2_test_report.txt
        echo "" >> msys2_test_report.txt
        
        echo "=== Tools Available ===" >> msys2_test_report.txt
        which clang &>/dev/null && echo "✓ Clang: $(which clang)" >> msys2_test_report.txt || echo "✗ Clang: Not found" >> msys2_test_report.txt
        
        # Check NASM more thoroughly
        if which nasm &>/dev/null; then
          echo "✓ NASM (MSYS2): $(which nasm)" >> msys2_test_report.txt
        elif [ -f "/usr/bin/nasm" ]; then
          echo "✓ NASM (system): /usr/bin/nasm" >> msys2_test_report.txt
        else
          echo "✗ NASM: Not found in MSYS2 PATH" >> msys2_test_report.txt
        fi
        
        which make &>/dev/null && echo "✓ Make: $(which make)" >> msys2_test_report.txt || echo "✗ Make: Not found" >> msys2_test_report.txt
        which gcc &>/dev/null && echo "✓ GCC: $(which gcc)" >> msys2_test_report.txt || echo "✗ GCC: Not found" >> msys2_test_report.txt
        
        echo "" >> msys2_test_report.txt
        echo "=== Environment Variables ===" >> msys2_test_report.txt
        echo "MSYSTEM: $MSYSTEM" >> msys2_test_report.txt
        echo "CLANG_BIN: $(dirname $(which clang 2>/dev/null) 2>/dev/null)/" >> msys2_test_report.txt
        
        if which nasm &>/dev/null; then
          echo "NASM_BIN: $(dirname $(which nasm))/" >> msys2_test_report.txt
        elif [ -f "/usr/bin/nasm" ]; then
          echo "NASM_BIN: /usr/bin/" >> msys2_test_report.txt
        else
          echo "NASM_BIN: Not available" >> msys2_test_report.txt
        fi
        
        echo "" >> msys2_test_report.txt
        echo "=== Migration Recommendations ===" >> msys2_test_report.txt
        echo "1. Use 'nasm' package instead of 'mingw-w64-x86_64-nasm'" >> msys2_test_report.txt
        echo "2. Add MSYS2 paths to GITHUB_PATH for Windows batch access" >> msys2_test_report.txt
        echo "3. Use msys2 shell for complex build operations" >> msys2_test_report.txt
        echo "4. Set EDK2 environment variables using dynamic tool detection" >> msys2_test_report.txt
        echo "5. Set NASM_PREFIX, CLANG_BIN, CYGWIN_HOME before edksetup.bat to suppress warnings" >> msys2_test_report.txt
        
        cat msys2_test_report.txt
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: msys2-action-test-results
        path: msys2_test_report.txt
        retention-days: 30
